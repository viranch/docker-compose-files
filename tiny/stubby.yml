################################################################################
######################## STUBBY YAML CONFIG FILE ###############################
################################################################################
# For more information see:
# https://dnsprivacy.org/wiki/display/DP/Configuring+Stubby
# https://raw.githubusercontent.com/getdnsapi/stubby/develop/stubby.yml.example

########################## BASIC & PRIVACY SETTINGS ############################
# Specifies whether to run as a recursive or stub resolver
# For stubby this MUST be set to GETDNS_RESOLUTION_STUB
resolution_type: GETDNS_RESOLUTION_STUB

# Ordered list composed of one or more transport protocols:
# GETDNS_TRANSPORT_UDP, GETDNS_TRANSPORT_TCP or GETDNS_TRANSPORT_TLS
#
# Note: If using Strict mode below, only use GETDNS_TRANSPORT_TLS.
dns_transport_list:
  - GETDNS_TRANSPORT_TLS

# Selects Strict or Opportunistic Usage profile as described in
# https://datatracker.ietf.org/doc/draft-ietf-dprive-dtls-and-tls-profiles/
#
# For Strict use        GETDNS_AUTHENTICATION_REQUIRED
# For Opportunistic use GETDNS_AUTHENTICATION_NONE
tls_authentication: GETDNS_AUTHENTICATION_REQUIRED

# EDNS0 option to pad the size of the DNS query to the given blocksize
# 128 is currently recommended by 
# https://tools.ietf.org/html/draft-ietf-dprive-padding-policy-03
#
tls_query_padding_blocksize: 128

# EDNS0 option for ECS client privacy as described in Section 7.1.2 of
# https://tools.ietf.org/html/rfc7871
#
edns_client_subnet_private : 1

############################# CONNECTION SETTINGS ##############################
# Sets how stubby distributes queries across name servers. 
# Set to 1 to instruct stubby to distribute queries across all available name
# servers - this will use multiple simultaneous connections which can give
# better performance in most (but not all) cases.
# Set to 0 to treat the upstreams below as an ordered list and use a single
# upstream until it becomes unavailable, then use the next one.
#
round_robin_upstreams: 1

# EDNS0 option for keepalive idle timeout in ms as specified in
# https://tools.ietf.org/html/rfc7828
# This keeps idle TLS connections open to avoid the overhead of opening a new 
# connection for every query.
#
idle_timeout: 10000

# Control the maximum number of connection failures that will be permitted
# before Stubby backs-off from using an individual upstream (default 2)
#
# tls_connection_retries: 5

# Control the maximum time in seconds Stubby will back-off from using an
# individual upstream after failures under normal circumstances (default 3600)
#
# tls_backoff_time: 300

# Specify where the location for CA certificates for verification purposes are 
# located.
tls_ca_path: "/etc/ssl/certs/"

# Limit the total number of outstanding queries permitted
#
# limit_outstanding_queries: 100

# Specify the timeout on getting a response to an individual request
# (default 5s)
#
# timeout: 1

################################ LISTEN ADDRESS ################################
# Set the listen addresses for the stubby DAEMON. This specifies localhost IPv4
# and IPv6. It will listen on port 53 by default. Use <IP_address>@<port> to
# specify a different port
#
listen_addresses:
  -  0.0.0.0@8053
#  -  0:0:0:0:0:0:0:0@8053

############################### DNSSEC SETTINGS ################################
# Require DNSSEC validation. For releases earlier than 1.2 a trust anchor must
# be configured configured manually. This can be done with unbound-anchor.
#
# dnssec_return_status: GETDNS_EXTENSION_TRUE

# Specify the location of the installed trust anchor file (leave commented out
# for zero configuration DNSSEC)
#
# dnssec_trust_anchors: "/etc/unbound/getdns-root.key"

##################################  UPSTREAMS  ################################
# Specify the list of upstream recursive name servers to send queries to
# In Strict mode upstreams need either a tls_auth_name or a tls_pubkey_pinset
# so the upstream can be authenticated.
#
# In Opportunistic mode they only require an IP address in address_data.
#
upstream_recursive_servers:

####### IPv4 addresses ######
## Cloudflare 1.1.1.1 and 1.0.0.1
#  - address_data: 1.1.1.1
#    tls_auth_name: "cloudflare-dns.com"
#  - address_data: 1.0.0.1
#    tls_auth_name: "cloudflare-dns.com"

## Google
  - address_data: 8.8.8.8
    tls_auth_name: "dns.google"
  - address_data: 8.8.4.4
    tls_auth_name: "dns.google"

## getdnsapi.net
#  - address_data: 185.49.141.37
#    tls_auth_name: "getdnsapi.net"

## Surfnet
#  - address_data: 145.100.185.15
#    tls_auth_name: "dnsovertls.sinodun.com"
#  - address_data: 145.100.185.16
#    tls_auth_name: "dnsovertls1.sinodun.com"

## Quad 9 'secure' service - Filters, does DNSSEC, doesn't send ECS
#  - address_data: 9.9.9.9
#    tls_auth_name: "dns.quad9.net"
#  - address_data: 149.112.112.112
#    tls_auth_name: "dns.quad9.net"

## CleanBrowsing Security Filter
#  - address_data: 185.228.168.168
#    tls_auth_name: "security-filter-dns.cleanbrowsing.org"
#  - address_data: 185.228.169.168
#    tls_auth_name: "security-filter-dns.cleanbrowsing.org"

## CleanBrowsing Adult Filter
#  - address_data: 185.228.168.10
#    tls_auth_name: "adult-filter-dns.cleanbrowsing.org"
#  - address_data: 185.228.169.11
#    tls_auth_name: "adult-filter-dns.cleanbrowsing.org"

## CleanBrowsing Family Filter
#  - address_data: 185.228.168.168
#    tls_auth_name: "family-filter-dns.cleanbrowsing.org"
#  - address_data: 85.228.169.168
#    tls_auth_name: "family-filter-dns.cleanbrowsing.org"

####### IPv6 addresses ######
## Cloudflare servers
#  - address_data: 2606:4700:4700::1111
#    tls_auth_name: "cloudflare-dns.com"
#  - address_data: 2606:4700:4700::1001
#    tls_auth_name: "cloudflare-dns.com"

## Google
#  - address_data: 2001:4860:4860::8888
#    tls_auth_name: "dns.google"
#  - address_data: 2001:4860:4860::8844
#    tls_auth_name: "dns.google"

## getdnsapi.net
#  - address_data: 2a04:b900:0:100::37
#    tls_auth_name: "getdnsapi.net"

## Surfnet
#  - address_data: 2001:610:1:40ba:145:100:185:15
#    tls_auth_name: "dnsovertls.sinodun.com"
#  - address_data: 2001:610:1:40ba:145:100:185:16
#    tls_auth_name: "nsovertls1.sinodun.com"

## Quad 9 'secure' service - Filters, does DNSSEC, doesn't send ECS
#  - address_data: 2620:fe::fe
#    tls_auth_name: "dns.quad9.net"

## CleanBrowsing Security Filter
#  - address_data: 2a0d:2a00:1::2
#    tls_auth_name: "security-filter-dns.cleanbrowsing.org"
#  - address_data: 2a0d:2a00:2::2
#    tls_auth_name: "security-filter-dns.cleanbrowsing.org"

## CleanBrowsing Adult Filter
#  - address_data: 2a0d:2a00:1::1
#    tls_auth_name: "adult-filter-dns.cleanbrowsing.org"
#  - address_data: 2a0d:2a00:2::1
#    tls_auth_name: "adult-filter-dns.cleanbrowsing.org"

## CleanBrowsing Family Filter
#  - address_data: 2a0d:2a00:1::
#    tls_auth_name: "family-filter-dns.cleanbrowsing.org"
#  - address_data: 2a0d:2a00:2::
#    tls_auth_name: "family-filter-dns.cleanbrowsing.org"
